[ { "title": "Statistical Learning for Multi&#45;omics Data Analysis with R", "url": "/posts/Statistical-Learning-for-Multi&-45;omics-Data-Analysis-with-R/", "categories": "Workshop/Conference, 16th Asian Institute in Statistical Genetics and Genomics Workshop", "tags": "r, statistical learning, machine learning, workshop, multiomics", "date": "2022-07-26 14:00:00 +0900", "snippet": "This post is written after taking lecture “Multi-omics Data Analysis” of 16th Asian Institute in Statistical Genetics and Genomics Workshop.DAY 1 (21.Jul.2022)1. Dimensionality ReductionConvert high-dimensional data to low-dimentional data.1. Removal of uninformative features based on experience.2. Removal of uninformative features based on computational method. ex) PCA1-1. Principal Component Analysis (PCA)Define y_k that is orthogonal with y_(k-1). Select n of y_k that have largest variance.# Example R code of PCAX &lt;- matrix(rnorm(32000), 1000, 32)pca_X &lt;- prcomp(X)Figure 01. Example of PCA for TCGA Expression Data1-2. Independent Component Analysis (ICA)Basic idea is same with PCA, but do not need to be orthgonal.# Example R code of ICAlibrary(fastICA)s &lt;- matrix(runif(10000),5000,2)A &lt;- matrix(c(1,1,-1,3), 2, 2, byrow= TRUE)X &lt;- s%*%Aa &lt;- fastICA(X, 2, alg.type=\"parallel\", fun= \"logcosh\", alpha = 1, method = \"C\", row.norm = FALSE, maxit = 200, tol = 0.0001, verbose = TRUE)Figure 02. Difference between PCA and ICA1-3. Non-negative Matrix Factorization (NMF)The matrix V is represented by the two smaller matrices W and H, which, when multiplied, reconstruct V.Figure 03. NMF# Example R code of NMFinstall.packages(\"NMF\")library(NMF)max &lt;- matrix(runif(n=200, min=0, max=100), nrow=30, ncol=10)res &lt;- nmf(mat, rank=2)w &lt;- basis(res)h &lt;- coefw %*% h # ~matdim(w) # 30 21-4. t-distributed Stochastic Neighbor Embedding (t-SNE)Nonlinear dimensionality reduction technique.The distribution of data is checked by distance based on t-distribution.Figure 04. t-SNE# Example R code of t-SNEinstall.packages(\"Rtsne\")library(Rtsne)data(iris)iris_unique &lt;- unique(iris)iris_matrix &lt;- as.matrix(iris_unique[,1:4])tsne_out &lt;- Rtsne(iris_matrix) plot(tsne_out$Y, col=iris_unique$Species)Figure 05. tsne_out2. Clustering No labels Group points into clusters based on how “near” they are to one another Identify structure in data Unsupervised learning2-1. k-means clustering1. Ask user how many clusters they’d like. (e.g. k=5)2. Randomly guess k cluster center locations3. Each datapoint finds out which center it’s closest to.4. Each center finds the centroid of the points it owns and jumps there.5. Repeat until terminated.Figure 06. k-means Clustering Algorithm# Example R code of k-means Clusteringiris2 &lt;- irisiris2$Species &lt;- NULLkmeans.result &lt;- kmeans(iris2, 3)kmeans.result # Figure 07plot(iris2[c(\"Sepal.Length\",\"Sepal.Width\")], col=kmeans.result$cluster) # Figure 08Figure 07. kmeans.resultFigure 08. kmeans.result plot2-2. Hierarchical Clustering1. Select two samples and measure distance between them.2. Make the nearest two samples into a group and regard them as one sample.3. Repeat until terminated. How to measure distance between groups? Single LinkageDissimilarity between two clusters = Minimum dissimilarity between the members of two clusters. Complete LinkageDissimilarity between two clusters = Minimum dissimilarity between the members of two clusters. Average LinkageDissimilarity between two clusters = Averaged distances of all pairs of objects (one from each cluster). Average Group LinkageDissimilarity between two clusters = Distance between two cluster means.Figure 09. Four method to measure distance between groups (a) Single Linkage (b) Complete Linkage (c) Average Linkage (d) Average Group Linkage# Example R code of Hierachical Clusteringidx &lt;- sample(1:dim(iris)[1], 40)irisSample &lt;- iris[idx,] irisSample$Species &lt;- NULLhc &lt;- hclust(dist(irisSample), method=\"ave\")hc # Figure 10plot(hc, hang = -1, labels=iris$Species[idx]) # Figure 11Figure 10. hcFigure 11. hc plotDAY 2 (22.Jul.2022)The contents of Day 2 are summarized in the file below.\t\t\t\t" }, { "title": "How to Write a Post &#45; Markdown Tutorial 2", "url": "/posts/How-to-Write-a-Post-&-45;-Markdown-Tutorial-2/", "categories": "Github, Tutorial", "tags": "github, jekyll, chirpy, markdown", "date": "2022-07-13 16:55:00 +0900", "snippet": "1) Picture![alt \"Figure explanation\"](\"File path\")If you want to insert caption, use *caption*.    2) Table 2.1) Structure of Table// Space is neccesary before table| First Header | Second Header | Third Header | | :------------ | :-----------: | -------------------: || First row | Data | Very long data entry || Second row | **Cell** | *Cell* || Third row | Cell that spans across two columns || // Space is neccesary after tableResults First Header Second Header Third Header First row Data Very long data entry Second row Cell Cell Third row Cell that spans across two columns     2.2) AlignmentInsert : symbol one or both side of headers.| Header One | Header Two | Header Three | Header Four | | ---------- | :--------- | :----------: | ----------: | | Default | Left | Center | Right | Results Header One Header Two Header Three Header Four Default Left Center Right   2.3) Column Spanning| Column 1 | Column 2 | Column 3 | Column 4 || -------- | :------: | -------- | -------- || No span | Span across three columns |||Results Column 1 Column 2 Column 3 Column 4 No span Span across three columns          3) EmphasisEmphasize *this* // ItalicEmphasize **this** // BoldEmphasize ***this*** // Bold and ItalicResultsEmphasize this Emphasize thisEmphasize this    4) Link[Google](http://www.google.com) // Inline&lt;http://www/google.co.kr&gt; // urlGoogle[1] is a search engine. // Reference[1]: http://www.google.com ResultsGooglehttp://www.google.com Google1 is a search engine." }, { "title": "DEG Analysis with limma", "url": "/posts/DEG-Analysis-with-limma/", "categories": "R/Python, R", "tags": "r, deg, limma", "date": "2022-07-01 12:22:00 +0900", "snippet": "1) What is “limma”?It is an R/Bioconductor software package that provides an integrated solution for analysing data from gene expression expeirments. For limma, both RNA-seq and microarray data can be used as input data.    2) What is “DEG”?DEG is an abbreviation of “Differentially Expressed Gene.” That is, genes that are differently expressed between several groups - for example, tumoral cell and normal cell, subtypeA and subtype B, and so on - are called DEGs.    3) DEG Anaylsis with limmaStep 1. Install limmaif (!require(\"BiocManager\", quietly = TRUE)) install.packages(\"BiocManager\")BiocManager::install(\"limma\")library(limma) Step 2. Import DataData &lt;- read.csv(\"DEA_fpkm.csv\") # 598 x 20,001FPKM &lt;- Data[2:nrow(Data)-1,2:ncol(Data)] # 579 x 20,000FPKM &lt;- (2**FPKM) -1 GeneIDs &lt;- Data[1:nrow(Data)-1,1] rownames(FPKM) &lt;- GeneIDs # View(FPKM) # Figure 01Figure 01. FPKM Step 3. Making Design MatrixCondition &lt;- Data[nrow(Data),2:ncol(Data)] # 579 x 1# View(Condition) lim_design &lt;-model.matrix(~ 0 + factor(t(Condition))) # 2 x 579colnames(lim_design) &lt;- c(\"Dead\",\"Survive\")rownames(lim_design) &lt;- colnames(Condition)dim(lim_design)# View (lim_design) # Figure 02 Figure 02. lim_design Step 4. Making Contrast Matrixlimma_fit &lt;- lmFit(FPKM,lim_design)limma_cont &lt;- makeContrasts(Survive - Dead,levels=lim_design) # Control Group = Dead# View(limma_cont) # Figure 03limma_fit.cont &lt;- contrasts.fit(limma_fit,limma_cont)limma_fit.cont &lt;- eBayes(limma_fit.cont) Figure 03. Contrast Matrix Step 5. Resultslimma_res &lt;- topTable(limma_fit.cont, adjust.method = 'BH', number = 20000) # View(limma_res) # Figure 04sum(limma_res$adj.P.Val&lt;=0.05 &amp; abs(limma_res$logFC) &gt;= 1.0) # result : 132 # write.table(limma_res,\"DEG_fpkm.csv\",sep=',',quote=F)Figure 04. limma_res logFC : The proportion of expression of a gene in the test group compared to the control group. The base is 2.   ex) logFC = 1 means that expression of gene X is twice higher in Survive group than in Dead group.  If logFC is a negative value, it means that gene X is underexpressed in the test group. adj.P.Val : FDR (False Discovery Rate) Step 6. Label Regulated Geneslimma_res$diffexpressed &lt;- \"NO\"# if log2Foldchange &gt; 1.0 and pvalue &lt; 0.05, set as \"UP\" limma_res$diffexpressed[limma_res$logFC &gt;= 1.0 &amp; limma_res$adj.P.Val &lt;= 0.05] &lt;- \"UP\"# if log2Foldchange &lt; -1.0 and pvalue &lt; 0.05, set as \"DOWN\"limma_res$diffexpressed[limma_res$logFC &lt;= -1.0 &amp; limma_res$adj.P.Val &lt;= 0.05] &lt;- \"DOWN\"# View(limma_res) # Figure 05Figure 05. limma_res Step 7. Plotp &lt;- ggplot(data=limma_res, aes(x=logFC, y=-log10(adj.P.Val), col=diffexpressed)) + geom_point() + theme_minimal()# Add lines as before...p2 &lt;- p + geom_vline(xintercept=c(-1.0, 1.0), col=\"red\") + geom_hline(yintercept=-log10(0.05), col=\"red\")p3 &lt;- p2 + scale_color_manual(values=c(\"blue\", \"black\", \"red\"))# 2. to automate a bit: ceate a named vector: the values are the colors to be used, the names are the categories they will be assigned to:mycolors &lt;- c(\"blue\", \"red\", \"black\")names(mycolors) &lt;- c(\"DOWN\", \"UP\", \"NO\")p3 &lt;- p2 + scale_colour_manual(values = mycolors)p3 # Figure 06Figure 06. p3" }, { "title": "How to Write a Post &#45; Markdown Tutorial 1", "url": "/posts/How-to-Write-a-Post-&-45;-Markdown-Tutorial-1/", "categories": "Github, Tutorial", "tags": "github, jekyll, chirpy, markdown", "date": "2022-06-24 13:39:00 +0900", "snippet": "0) Write Markdown Files for PostsThe title of the .md(markdown) file for post should be \"YYYY-MM-DD-TITLE.md\" and locate the file in the _post/ folder.You should start your file with the contents---title : How to Write a Post - Markdown Manual 1date : YYYY-MM-DD HH:MM:SS + 0900categories: []tags: [] // only in small letters---    1) To Enter TextYou can write text without any help of functions or symbols.    2) TitleYou can write title with “#”.# The biggest text.## The second biggest text.### The number of '#' (N) means Nth biggest text.#### There must be a space between '#' and text.    3) Code BlockThere are two ways to use code block in your text.First - Use “tab” on your keyboardNormal Text// enter : You should type \"enter key\" before what you want to make as code block.\tcodeblock// enter : You should type \"enter key\" after what you want to make as code block.Normal TextResults   Normal Textcode blockNormal Text    Second - Use ```\\``` // Backslash is needed to remove in real code.code block\\``` // Backslash is needed to remove in real code.Resultcode block If you want to use specific computational language, you should write the name of language life below.\\```pythonprint(\"Hello World!\")print(\"code block\")\\```Resultprint(\"Hello World!\")print(\"code block\")    4) BlockQuote&gt; Hello&gt;&gt; World!&gt;&gt;&gt; BlockquoteResult Hello World! Blockquote     5) Ordered List1. Hello2. World!3. Ordered List Hello World! Ordered List    6) Unordered ListYou can use +,*,-. The results are all same no matter which symbol you use.+ Hello\t+ World! // Use \"Tab key\" if you want to make dependent bulltes. \t\t+ Unordered ListResult Hello World! // Use “Tab key” if you want to make dependent list. Unordered List " } ]
